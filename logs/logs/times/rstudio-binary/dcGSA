+ git pull origin main
From https://github.com/almahmoud/gha-build
 * branch                main       -> FETCH_HEAD
   07ed97ee6..df7b8ec8e  main       -> origin/main
Updating 07ed97ee6..df7b8ec8e
Fast-forward
 logs/run_ids/rstudio-binaries/GSEAlm          | 2 ++
 logs/run_ids/rstudio-binaries/GeneticsPed     | 2 ++
 logs/run_ids/rstudio-binaries/annotationTools | 2 ++
 logs/run_ids/rstudio-binaries/bioDist         | 2 ++
 logs/run_ids/rstudio-binaries/classInt        | 2 ++
 logs/run_ids/rstudio-binaries/convert         | 2 ++
 logs/run_ids/rstudio-binaries/dyebias         | 2 ++
 7 files changed, 14 insertions(+)
+ LIBRARY=/__w/gha-build/gha-build/built/
+ PKG=dcGSA
+ runstart=
+ mkdir -p /__w/gha-build/gha-build/built/
+ mkdir -p /tmp/tars/
+ sed -n '/^    "dcGSA"/,/^    "/p' directdeps.json
+ awk '-F"' '{print $2}'
+ grep '^        "'
+ '[' -s /tmp/deps ']'
+ xargs -I## bash -c 'if [ -d /__w/gha-build/gha-build/built//## ]; then echo '\''Dependency ## is already found.'\''; else cat lists/## | xargs -i bash -c '\''curl -o /__w/gha-build/gha-build/built//{} https://js2.jetstream-cloud.org:8001/swift/v1/gha-build/running//{} && ( cd /__w/gha-build/gha-build/built/ && tar -xvf {} && rm {} )'\''; fi'
+ cat /tmp/deps
Dependency Matrix is already found.
cat: lists/BiocParallel: No such file or directory
+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/__w/gha-build/gha-build/built/'\'', p); .libPaths(p); if(BiocManager::install('\''dcGSA'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
+ mv BH_1.78.0-0_R_x86_64-pc-linux-gnu.tar.gz BiocParallel_1.32.4_R_x86_64-pc-linux-gnu.tar.gz dcGSA_1.26.0_R_x86_64-pc-linux-gnu.tar.gz formatR_1.12_R_x86_64-pc-linux-gnu.tar.gz futile.logger_1.4.3_R_x86_64-pc-linux-gnu.tar.gz futile.options_1.0.1_R_x86_64-pc-linux-gnu.tar.gz lambda.r_1.2.4_R_x86_64-pc-linux-gnu.tar.gz snow_0.4-4_R_x86_64-pc-linux-gnu.tar.gz /tmp/tars/
+ echo '\n\nBinary Build log:\n'
\n\nBinary Build log:\n
+ cat /tmp/dcGSA
'getOption("repos")' replaces Bioconductor standard repositories, see
'?repositories' for details

replacement repositories:
    CRAN: https://packagemanager.rstudio.com/cran/__linux__/jammy/latest

Bioconductor version 3.16 (BiocManager 1.30.19), R 4.2.2 (2022-10-31)
Installing package(s) 'dcGSA'
also installing the dependencies ‘formatR’, ‘lambda.r’, ‘futile.options’, ‘futile.logger’, ‘snow’, ‘BH’, ‘BiocParallel’

trying URL 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest/src/contrib/formatR_1.12.tar.gz'
Content type 'binary/octet-stream' length 149642 bytes (146 KB)
==================================================
downloaded 146 KB

trying URL 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest/src/contrib/lambda.r_1.2.4.tar.gz'
Content type 'binary/octet-stream' length 109336 bytes (106 KB)
==================================================
downloaded 106 KB

trying URL 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest/src/contrib/futile.options_1.0.1.tar.gz'
Content type 'binary/octet-stream' length 18090 bytes (17 KB)
==================================================
downloaded 17 KB

trying URL 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest/src/contrib/futile.logger_1.4.3.tar.gz'
Content type 'binary/octet-stream' length 99462 bytes (97 KB)
==================================================
downloaded 97 KB

trying URL 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest/src/contrib/snow_0.4-4.tar.gz'
Content type 'binary/octet-stream' length 95103 bytes (92 KB)
==================================================
downloaded 92 KB

trying URL 'https://packagemanager.rstudio.com/cran/__linux__/jammy/latest/src/contrib/BH_1.78.0-0.tar.gz'
Content type 'binary/octet-stream' length 12324265 bytes (11.8 MB)
==================================================
downloaded 11.8 MB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/BiocParallel_1.32.4.tar.gz'
Content type 'application/x-gzip' length 976785 bytes (953 KB)
==================================================
downloaded 953 KB

trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/dcGSA_1.26.0.tar.gz'
Content type 'application/x-gzip' length 38303 bytes (37 KB)
==================================================
downloaded 37 KB

* installing *binary* package ‘formatR’ ...
* ‘formatR’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘formatR’ as ‘formatR_1.12_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (formatR)
* installing *binary* package ‘futile.options’ ...
* ‘futile.options’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘futile.options’ as ‘futile.options_1.0.1_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (futile.options)
* installing *binary* package ‘snow’ ...
* ‘snow’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘snow’ as ‘snow_0.4-4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (snow)
* installing *binary* package ‘BH’ ...
* ‘BH’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘BH’ as ‘BH_1.78.0-0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BH)
* installing *binary* package ‘lambda.r’ ...
* ‘lambda.r’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘lambda.r’ as ‘lambda.r_1.2.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (lambda.r)
* installing *binary* package ‘futile.logger’ ...
* ‘futile.logger’ was already a binary package and will not be rebuilt
* creating tarball
packaged installation of ‘futile.logger’ as ‘futile.logger_1.4.3_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (futile.logger)
* installing *source* package ‘BiocParallel’ ...
** using staged installation
checking whether the C++ compiler works... yes
checking for C++ compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether the compiler supports GNU C++... yes
checking whether g++ -std=gnu++14 accepts -g... yes
checking for g++ -std=gnu++14 option to enable C++11 features... none needed
checking for library containing shm_open... none required
checking for stdio.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for strings.h... yes
checking for sys/stat.h... yes
checking for sys/types.h... yes
checking for unistd.h... yes
checking for sys/mman.h... yes
configure: creating ./config.status
config.status: creating src/Makevars
** libs
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/__w/gha-build/gha-build/built/BH/include' -I'/usr/local/lib/R/site-library/cpp11/include' -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c cpp11.cpp -o cpp11.o
g++ -std=gnu++11 -I"/usr/local/lib/R/include" -DNDEBUG  -I'/__w/gha-build/gha-build/built/BH/include' -I'/usr/local/lib/R/site-library/cpp11/include' -I/usr/local/include   -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ipcmutex.cpp -o ipcmutex.o
g++ -std=gnu++11 -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o BiocParallel.so cpp11.o ipcmutex.o -L/usr/local/lib/R/lib -lR
installing to /__w/gha-build/gha-build/built/00LOCK-BiocParallel/00new/BiocParallel/libs
** R
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘BiocParallel’ as ‘BiocParallel_1.32.4_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (BiocParallel)
* installing *source* package ‘dcGSA’ ...
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘dcGSA’ as ‘dcGSA_1.26.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (dcGSA)

The downloaded source packages are in
	‘/tmp/Rtmp5hkDAG/downloaded_packages’
Old packages: 'bslib', 'cli', 'digest', 'evaluate', 'gert', 'htmltools',
  'htmlwidgets', 'httpuv', 'jsonlite', 'knitr', 'openssl', 'pkgbuild',
  'pkgdown', 'pkgload', 'purrr', 'rmarkdown', 'roxygen2', 'sass', 'shiny',
  'stringr', 'testthat', 'tinytex', 'vctrs', 'whisker', 'xfun', 'boot',
  'foreign', 'Matrix', 'nlme'
43.60user 5.04system 0:51.53elapsed 94%CPU (0avgtext+0avgdata 328096maxresident)k
84976inputs+758296outputs (431major+676839minor)pagefaults 0swaps
