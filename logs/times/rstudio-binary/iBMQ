+ git pull origin main
From https://github.com/almahmoud/gha-build
 * branch              main       -> FETCH_HEAD
   478a8dc5..47fa81b3  main       -> origin/main
Updating 478a8dc5..47fa81b3
Fast-forward
 lists/flowTrans                                    |  2 +-
 lists/ggstance                                     |  2 +-
 lists/knitrBootstrap                               |  2 +-
 logs/run_ids/rstudio-binaries/LambertW             |  2 +
 logs/run_ids/rstudio-binaries/htmlwidgets          |  2 +
 logs/run_ids/rstudio-binaries/mrfDepth             |  2 +
 logs/sizes/rstudio-binaries/binaries/ggstance      |  1 +
 .../sizes/rstudio-binaries/binaries/knitrBootstrap |  1 +
 logs/sizes/rstudio-binaries/libraries/ggstance     |  1 +
 .../rstudio-binaries/libraries/knitrBootstrap      |  1 +
 logs/times/rstudio-binary/ggstance                 | 88 ++++++++++++++++++++++
 logs/times/rstudio-binary/knitrBootstrap           | 84 +++++++++++++++++++++
 packages.json                                      |  7 --
 13 files changed, 185 insertions(+), 10 deletions(-)
 create mode 100644 logs/run_ids/rstudio-binaries/LambertW
 create mode 100644 logs/run_ids/rstudio-binaries/htmlwidgets
 create mode 100644 logs/run_ids/rstudio-binaries/mrfDepth
 create mode 100644 logs/sizes/rstudio-binaries/binaries/ggstance
 create mode 100644 logs/sizes/rstudio-binaries/binaries/knitrBootstrap
 create mode 100644 logs/sizes/rstudio-binaries/libraries/ggstance
 create mode 100644 logs/sizes/rstudio-binaries/libraries/knitrBootstrap
 create mode 100644 logs/times/rstudio-binary/ggstance
 create mode 100644 logs/times/rstudio-binary/knitrBootstrap
+ export LIBRARY=/__w/gha-build/gha-build/built/
+ LIBRARY=/__w/gha-build/gha-build/built/
+ export PKG=iBMQ
+ PKG=iBMQ
+ export runstart=2022-12-23-11-26
+ runstart=2022-12-23-11-26
+ mkdir -p /__w/gha-build/gha-build/built/
+ mkdir -p /tmp/tars/
+ sed -n '/^    "iBMQ"/,/^    "/p' directdeps.json
+ grep '^        "'
+ awk '-F"' '{print $2}'
+ export -f process_dep
+ '[' -s /tmp/deps ']'
+ process_deps
+ cat /tmp/deps
+ xargs -i bash -c 'process_dep {}'
Dependency Biobase is already found.
Dependency ggplot2 is already found.
+ Rscript -e 'Sys.setenv(BIOCONDUCTOR_USE_CONTAINER_REPOSITORY=FALSE); p <- .libPaths(); p <- c('\''/__w/gha-build/gha-build/built/'\'', p); .libPaths(p); if(BiocManager::install('\''iBMQ'\'', INSTALL_opts = '\''--build'\'', update = TRUE, quiet = FALSE, force = TRUE, keep_outputs = TRUE) %in% rownames(installed.packages())) q(status = 0) else q(status = 1)'
+ mv iBMQ_1.38.0_R_x86_64-pc-linux-gnu.tar.gz /tmp/tars/
+ echo '\n\nBinary Build log:\n'
\n\nBinary Build log:\n
+ cat /tmp/iBMQ
'getOption("repos")' replaces Bioconductor standard repositories, see
'?repositories' for details

replacement repositories:
    CRAN: https://packagemanager.rstudio.com/cran/__linux__/jammy/latest

Bioconductor version 3.16 (BiocManager 1.30.19), R 4.2.2 (2022-10-31)
Installing package(s) 'iBMQ'
trying URL 'https://bioconductor.org/packages/3.16/bioc/src/contrib/iBMQ_1.38.0.tar.gz'
Content type 'application/x-gzip' length 4074535 bytes (3.9 MB)
==================================================
downloaded 3.9 MB

* installing *source* package ‘iBMQ’ ...
** using staged installation
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking how to run the C preprocessor... gcc -E
checking for pkg-config... /usr/bin/pkg-config
checking pkg-config is at least version 0.9.0... yes
checking for GSL... yes
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking omp.h usability... yes
checking omp.h presence... yes
checking for omp.h... yes
configure: creating ./config.status
config.status: creating src/Makevars
** libs
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include  -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c ARS.c -o ARS.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include  -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c RngStream.c -o RngStream.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include  -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c iBMQ_common.c -o iBMQ_common.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include  -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c main_parallel_sparse.c -o main_parallel_sparse.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include  -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c main_parallel_sparse_constC.c -o main_parallel_sparse_constC.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include  -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c norm_gamma_generation.c -o norm_gamma_generation.o
gcc -I"/usr/local/lib/R/include" -DNDEBUG   -I/usr/local/include  -fopenmp -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c sparse.c -o sparse.o
gcc -shared -L/usr/local/lib/R/lib -L/usr/local/lib -o iBMQ.so ARS.o RngStream.o iBMQ_common.o main_parallel_sparse.o main_parallel_sparse_constC.o norm_gamma_generation.o sparse.o -lgsl -lgslcblas -lm -lgomp -L/usr/local/lib/R/lib -lR
installing to /__w/gha-build/gha-build/built/00LOCK-iBMQ/00new/iBMQ/libs
** R
** data
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** checking absolute paths in shared objects and dynamic libraries
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* creating tarball
packaged installation of ‘iBMQ’ as ‘iBMQ_1.38.0_R_x86_64-pc-linux-gnu.tar.gz’
* DONE (iBMQ)

The downloaded source packages are in
	‘/tmp/RtmpVCUCdh/downloaded_packages’
Old packages: 'bslib', 'cli', 'digest', 'evaluate', 'gert', 'htmltools',
  'htmlwidgets', 'httpuv', 'jsonlite', 'knitr', 'openssl', 'pkgbuild',
  'pkgdown', 'pkgload', 'purrr', 'rmarkdown', 'roxygen2', 'sass', 'shiny',
  'stringr', 'testthat', 'tinytex', 'vctrs', 'whisker', 'xfun', 'boot',
  'foreign', 'Matrix', 'nlme'

real	0m14.191s
user	0m10.465s
sys	0m1.458s
