name: Build packages matrix
on:
  workflow_dispatch: {}
  workflow_run:
    workflows: ["Build packages matrix"]
    types: [completed]
#   schedule:
#     - cron: '*/5 * * * *'

jobs:
  getlistformatrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.pkglist }}
    steps:
      - uses: actions/checkout@v3
      - name: Initialize if necessary
        id: claim
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 50
          shell: bash
          command: |
            set -x
            git config --global --add safe.directory "$GITHUB_WORKSPACE"
            git config user.name github-actions
            git config user.email github-actions@github.com
            bash .github/scripts/list_tobuild.sh

      - id: matrix
        run: |
          echo pkglist=$(echo "['$(head -n10 tobuild.txt |  paste -d, -s | sed s/,/\',\'/g)']") >> $GITHUB_OUTPUT
          sed '1,10d' tobuild.txt > newtobuild && mv newtobuild tobuild.txt
      - name: Update list
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 50
          shell: bash
          command: |
            set -x
            git config --global --add safe.directory "$GITHUB_WORKSPACE"
            git config user.name github-actions
            git config user.email github-actions@github.com
            # PAT will trigger a push workflow, GITHUB_TOKEN won't
            # if [ -s tobuild.txt ]; then TOK=${{secrets.PAT}}; else TOK=${{secrets.GITHUB_TOKEN}}; fi
            # git remote set-url origin "https://github-actions:$TOK@github.com/${{github.repository}}.git"
            git add tobuild.txt
            git commit -m "Updating tobuild list"
            git push

  build:
    needs: getlistformatrix
    strategy:
      fail-fast: false
      matrix:
        pkg: ${{fromJson(needs.getlistformatrix.outputs.matrix)}}
    runs-on: ubuntu-latest
    container:
      image: bioconductor/bioconductor_docker:RELEASE_3_16
    steps:
      - uses: actions/checkout@v3

      - name: Get Current Job Log URL
        uses: Tiryoh/gha-jobid-action@v0
        id: jobs
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          job_name: build (${{ matrix.pkg }})

      - name: Get unique identifier for worker
        id: uniq
        run: |
          echo "::set-output name=uniq::$(cat /proc/sys/kernel/random/uuid | md5sum | awk '{print $1}')"

      - name: Push run_id
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 50
          shell: bash
          command: |
            set -x
            git config --global --add safe.directory "$GITHUB_WORKSPACE"
            git pull origin main || git reset --hard origin/main
            git config user.name github-actions
            git config user.email github-actions@github.com
            mkdir -p logs/run_ids/container
            PKG="${{ matrix.pkg }}"
            sed -i 's/readytobuild/claimed/g' >> "lists/$PKG"
            echo ${{ steps.jobs.outputs.html_url }} >> logs/run_ids/container/$PKG
            git add logs
            git commit -m "push run_id container $PKG"
            git push

      - name: Build claimed package
        id: pkgbuild
        run: |
          LIBRARY=$(echo "$(pwd)/built/")
          PKG="${{ matrix.pkg }}"
          bash .github/scripts/build_package.sh $LIBRARY $PKG 2>&1 > /tmp/$PKG
        continue-on-error: true

      - name: Get tar name
        id: tar
        run: |
          echo "::set-output name=name::$(ls /tmp/tars/ | grep ${{steps.claim.outputs.pkg}} | sed 's#/tmp/tars/##g')"
        if: steps.pkgbuild.outcome=='success'

      - name: Push failed before exit
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 50
          shell: bash
          command: |
            PKG="${{ matrix.pkg }}"
            git pull origin main || git reset --hard origin/main
            mkdir -p lists/failed
            cp /tmp/$PKG lists/failed/$PKG;
            git config user.name github-actions
            git config user.email github-actions@github.com
            git add lists
            git commit -m "Marked failed $PKG"
            git push
        if: steps.pkgbuild.outcome=='failure'

      - name: Exit on failure
        run: exit 1
        if: steps.pkgbuild.outcome=='failure'

      - uses: actions/upload-artifact@v3
        with:
          name: "artifact-${{ matrix.pkg }}"
          path: /tmp/tars/${{steps.tar.outputs.name}}

      - name: Install rclone
        shell: bash
        run: "sudo -v ; curl https://rclone.org/install.sh | sudo bash"

      - name: Add rclone conf file
        run: |
          echo "$RCLONE_CONF" > ~/.rclone.conf
        env:
          RCLONE_CONF: ${{secrets.RCLONE_CONF}}

      - name: Rclone push package and mark as pushed
        run: |
          set -x
          rclone copy /tmp/tars/${{steps.tar.outputs.name}} js2:/gha-build/container/ -vvvvvv

      - name: Rclone mark as pushed
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 50
          shell: bash
          command: |
            set -x
            git config --global --add safe.directory "$GITHUB_WORKSPACE"
            git config user.name github-actions
            git config user.email github-actions@github.com
            if bash -c "bash .github/scripts/rclone_push.sh ${{ matrix.pkg }} ${{steps.tar.outputs.name}} 2>&1 | grep -i 'error'"; then exit 1; else 
            echo "Marked pushed ${{ matrix.pkg }}"; fi
